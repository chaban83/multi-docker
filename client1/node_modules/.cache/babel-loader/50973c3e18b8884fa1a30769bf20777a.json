{"ast":null,"code":"var _jsxFileName = \"/home/osboxes/DEV/complex/client/src/Fib.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Fib extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      seenIndexes: [],\n      values: {},\n      index: ''\n    };\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      await axios.post('/api/values', {\n        index: this.state.index\n      });\n      this.setState({\n        index: ''\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchValues();\n    this.fetchIndexes();\n  }\n\n  async fetchValues() {\n    const values = await axios.get('/api/values/current');\n    this.setState({\n      values: values.data\n    });\n  }\n\n  async fetchIndexes() {\n    const seenIndexes = await axios.get('/api/values/all');\n    this.setState({\n      seenIndexes: seenIndexes.data\n    });\n  }\n\n  renderSeenIndexes() {\n    return this.state.seenIndexes.map(({\n      number\n    }) => number).join(', ');\n  }\n\n  renderValues() {\n    const entries = [];\n\n    for (let key in this.state.values) {\n      entries.push(React.createElement(\"div\", {\n        key: key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"For index \", key, \" I calculated \", this.state.values[key]));\n    }\n\n    return entries;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Enter your index:\"), React.createElement(\"input\", {\n      value: this.state.index,\n      onChange: event => this.setState({\n        index: event.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, \"Indexes I have seen:\"), this.renderSeenIndexes(), React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Calculated Values:\"), this.renderValues());\n  }\n\n}\n\nexport default Fib;","map":{"version":3,"sources":["/home/osboxes/DEV/complex/client/src/Fib.js"],"names":["React","Component","axios","Fib","state","seenIndexes","values","index","handleSubmit","event","preventDefault","post","setState","componentDidMount","fetchValues","fetchIndexes","get","data","renderSeenIndexes","map","number","join","renderValues","entries","key","push","render","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,GAAN,SAAkBF,SAAlB,CAA4B;AAAA;AAAA;AAAA,SACxBG,KADwB,GAChB;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,MAAM,EAAE,EAFJ;AAGJC,MAAAA,KAAK,EAAE;AAHH,KADgB;;AAAA,SAwBxBC,YAxBwB,GAwBT,MAAOC,KAAP,IAAiB;AAC5BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMR,KAAK,CAACS,IAAN,CAAW,aAAX,EAA0B;AAC5BJ,QAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG;AADU,OAA1B,CAAN;AAGA,WAAKK,QAAL,CAAc;AAAEL,QAAAA,KAAK,EAAE;AAAT,OAAd;AACH,KA9BuB;AAAA;;AAOxBM,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,WAAL;AACA,SAAKC,YAAL;AACH;;AAED,QAAMD,WAAN,GAAoB;AAChB,UAAMR,MAAM,GAAG,MAAMJ,KAAK,CAACc,GAAN,CAAU,qBAAV,CAArB;AACA,SAAKJ,QAAL,CAAc;AAACN,MAAAA,MAAM,EAAEA,MAAM,CAACW;AAAhB,KAAd;AACH;;AAED,QAAMF,YAAN,GAAqB;AACjB,UAAMV,WAAW,GAAG,MAAMH,KAAK,CAACc,GAAN,CAAU,iBAAV,CAA1B;AACA,SAAKJ,QAAL,CAAc;AACVP,MAAAA,WAAW,EAAEA,WAAW,CAACY;AADf,KAAd;AAGH;;AAUDC,EAAAA,iBAAiB,GAAG;AAChB,WAAO,KAAKd,KAAL,CAAWC,WAAX,CAAuBc,GAAvB,CAA2B,CAAC;AAACC,MAAAA;AAAD,KAAD,KAAcA,MAAzC,EAAiDC,IAAjD,CAAsD,IAAtD,CAAP;AACH;;AAEDC,EAAAA,YAAY,GAAG;AACX,UAAMC,OAAO,GAAG,EAAhB;;AACA,SAAM,IAAIC,GAAV,IAAiB,KAAKpB,KAAL,CAAWE,MAA5B,EAAoC;AAChCiB,MAAAA,OAAO,CAACE,IAAR,CACI;AAAK,QAAA,GAAG,EAAED,GAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACeA,GADf,oBACkC,KAAKpB,KAAL,CAAWE,MAAX,CAAkBkB,GAAlB,CADlC,CADJ;AAKH;;AACD,WAAOD,OAAP;AACH;;AAEDG,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,QAAQ,EAAE,KAAKlB,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAEI;AAAO,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWG,KAAzB;AACI,MAAA,QAAQ,EAAEE,KAAK,IAAI,KAAKG,QAAL,CAAc;AAACL,QAAAA,KAAK,EAAEE,KAAK,CAACkB,MAAN,CAAaC;AAArB,OAAd,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,CADJ,EAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAPJ,EAQK,KAAKV,iBAAL,EARL,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAVJ,EAWK,KAAKI,YAAL,EAXL,CADJ;AAeH;;AAhEuB;;AAmE5B,eAAenB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\nclass Fib extends Component {\n    state = {\n        seenIndexes: [],\n        values: {},\n        index: ''\n    };\n\n    componentDidMount() {\n        this.fetchValues();\n        this.fetchIndexes();\n    }\n\n    async fetchValues() {\n        const values = await axios.get('/api/values/current');\n        this.setState({values: values.data});         \n    }\n\n    async fetchIndexes() {\n        const seenIndexes = await axios.get('/api/values/all');\n        this.setState({\n            seenIndexes: seenIndexes.data\n        }); \n    }\n\n    handleSubmit = async (event) => {\n        event.preventDefault();\n        await axios.post('/api/values', {\n            index: this.state.index\n        });\n        this.setState({ index: '' });\n    }\n\n    renderSeenIndexes() {\n        return this.state.seenIndexes.map(({number}) => number).join(', ');\n    }\n\n    renderValues() {\n        const entries = [];\n        for  (let key in this.state.values) {\n            entries.push(\n                <div key={key}>\n                    For index {key} I calculated {this.state.values[key]}\n                </div>\n            );\n        }\n        return entries;\n    }\n\n    render() {\n        return (\n            <div>\n                <form onSubmit={this.handleSubmit}>\n                    <label>Enter your index:</label>\n                    <input value={this.state.index}\n                        onChange={event => this.setState({index: event.target.value})} />\n                    <button>Submit</button>\n                </form>\n                <h3>Indexes I have seen:</h3>\n                {this.renderSeenIndexes()}\n\n                <h3>Calculated Values:</h3>\n                {this.renderValues()}\n            </div>\n        )\n    }\n}\n\nexport default Fib;"]},"metadata":{},"sourceType":"module"}